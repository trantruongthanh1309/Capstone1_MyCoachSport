import { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import "./WorkScheduleManager.css";

export default function WorkScheduleManager() {
  const [schedule, setSchedule] = useState({
    mon: { morning: "", afternoon: "", evening: "" },
    tue: { morning: "", afternoon: "", evening: "" },
    wed: { morning: "", afternoon: "", evening: "" },
    thu: { morning: "", afternoon: "", evening: "" },
    fri: { morning: "", afternoon: "", evening: "" },
    sat: { morning: "", afternoon: "", evening: "" },
    sun: { morning: "", afternoon: "", evening: "" },
  });

  const navigate = useNavigate();
  const dayNames = {
    
    fri: "Th·ª© 2",
    sat: "Th·ª© 3",
    sun: "Th·ª© 4",
    mon: "Th·ª© 5",
    tue: "Th·ª© 6",
    wed: "Th·ª© 7",
    thu: "Ch·ªß nh·∫≠t",
  };
  const periods = ["morning", "afternoon", "evening"];
  const periodLabels = {
    morning: "Bu·ªïi s√°ng",
    afternoon: "Bu·ªïi tr∆∞a",
    evening: "Bu·ªïi t·ªëi",
  };

  useEffect(() => {
    fetch("http://localhost:5000/api/schedule/busy", {
      method: "GET",
      credentials: "include",
      headers: { Accept: "application/json; charset=utf-8" },
    })
      .then((res) => res.json())
      .then((data) => {
        const filled = {};
        for (let day in data) {
          filled[day] = { morning: "", afternoon: "", evening: "" };
          for (let period in data[day]) {
            if (period in filled[day]) {
              filled[day][period] = data[day][period] || "";
            }
          }
        }
        setSchedule(filled);
      })
      .catch((err) => alert("L·ªói t·∫£i l·ªãch"));
  }, []);

  const handleInputChange = (day, period, value) => {
    setSchedule((prev) => ({
      ...prev,
      [day]: { ...prev[day], [period]: value },
    }));
  };

  const handleSave = async () => {
    try {
      const res = await fetch("http://localhost:5000/api/schedule/busy", {
        method: "POST",
        headers: { "Content-Type": "application/json; charset=utf-8" },
        credentials: "include",
        body: JSON.stringify(schedule),
      });
      if (res.ok) {
        alert("‚úÖ L∆∞u l·ªãch th√†nh c√¥ng!");
        navigate("/planner");
      } else {
        alert("‚ùå L·ªói khi l∆∞u l·ªãch");
      }
    } catch (err) {
      alert("Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß");
    }
  };

  return (
    <div className="schedule-manager">
      <h1>üìÖ Qu·∫£n L√Ω L·ªãch L√†m Vi·ªác</h1>
      <table className="schedule-table">
        <thead>
          <tr>
            <th>Ng√†y</th>
            <th>Bu·ªïi s√°ng</th>
            <th>Bu·ªïi tr∆∞a</th>
            <th>Bu·ªïi t·ªëi</th>
          </tr>
        </thead>
        <tbody>
          {Object.entries(dayNames).map(([dayKey, dayLabel]) => (
            <tr key={dayKey}>
              <td>{dayLabel}</td>
              {periods.map((period) => (
                <td key={period}>
                  <input
                    type="text"
                    value={schedule[dayKey][period]}
                    onChange={(e) =>
                      handleInputChange(dayKey, period, e.target.value)
                    }
                    placeholder="Ghi ch√∫ n·∫øu b·∫≠n"
                    className="schedule-input"
                  />
                </td>
              ))}
            </tr>
          ))}
        </tbody>
      </table>
      <button onClick={handleSave} className="save-btn">
        üíæ L∆∞u L·ªãch L√†m Vi·ªác
      </button>
    </div>
  );
}
